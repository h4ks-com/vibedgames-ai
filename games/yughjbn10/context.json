{
  "messages": [
    {
      "role": "user",
      "content": "user controls random emoji using 'y' (up left), 'u' (up right), 'g' (left), 'h' (pass), 'j' (right), 'b' (down left), 'n' (down right); background tiled https://picsum.photos/16/16; 10 random emoji monsters and collectible items; score and health display; gems increase score, monsters decrease health\nMake sure everything is in a single HTML file with embedded CSS and JS in a single code block to be used as a web app."
    },
    {
      "role": "assistant",
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Emoji Game</title>\n    <style>\n        body {\n            margin: 0;\n            overflow: hidden;\n            background-image: url('https://picsum.photos/16/16');\n            background-repeat: repeat;\n            font-family: Arial, sans-serif;\n        }\n\n        #gameCanvas {\n            border: 1px solid black;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n\n        #scoreboard {\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            color: white;\n            font-size: 20px;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"scoreboard\">Score: 0 | Health: 100</div>\n    <canvas id=\"gameCanvas\" width=\"800\" height=\"600\"></canvas>\n\n    <script>\n        const canvas = document.getElementById('gameCanvas');\n        const ctx = canvas.getContext('2d');\n\n        const emojis = ['👾', '👻', '🎃', '👹', '👺', '👿', '💎', '🍀', '🌟', '🧙‍♂️'];\n        const monsters = [];\n        const collectibles = [];\n        let score = 0;\n        let health = 100;\n\n        const player = {\n            x: canvas.width / 2,\n            y: canvas.height / 2,\n            emoji: '😃',\n            size: 30\n        };\n\n        function spawnItems() {\n            for (let i = 0; i < 10; i++) {\n                const type = Math.random() < 0.5 ? 'monster' : 'collectible';\n                const emoji = emojis[Math.floor(Math.random() * emojis.length)];\n                const x = Math.random() * (canvas.width - 30);\n                const y = Math.random() * (canvas.height - 30);\n                if (type === 'monster') {\n                    monsters.push({ x, y, emoji });\n                } else {\n                    collectibles.push({ x, y, emoji });\n                }\n            }\n        }\n\n        function drawPlayer() {\n            ctx.fillText(player.emoji, player.x, player.y);\n        }\n\n        function drawItems() {\n            monsters.forEach(monster => {\n                ctx.fillText(monster.emoji, monster.x, monster.y);\n            });\n            collectibles.forEach(collectible => {\n                ctx.fillText(collectible.emoji, collectible.x, collectible.y);\n            });\n        }\n\n        function updateScoreboard() {\n            document.getElementById('scoreboard').innerText = `Score: ${score} | Health: ${health}`;\n        }\n\n        function checkCollisions() {\n            monsters.forEach((monster, index) => {\n                if (Math.abs(player.x - monster.x) < player.size && Math.abs(player.y - monster.y) < player.size) {\n                    health -= 10;\n                    monsters.splice(index, 1);\n                }\n            });\n\n            collectibles.forEach((collectible, index) => {\n                if (Math.abs(player.x - collectible.x) < player.size && Math.abs(player.y - collectible.y) < player.size) {\n                    score += 10;\n                    collectibles.splice(index, 1);\n                }\n            });\n        }\n\n        function gameLoop() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            drawPlayer();\n            drawItems();\n            checkCollisions();\n            updateScoreboard();\n\n            if (health <= 0) {\n                alert('Game Over! Your score: ' + score);\n                document.location.reload();\n            }\n\n            requestAnimationFrame(gameLoop);\n        }\n\n        function movePlayer(direction) {\n            switch (direction) {\n                case 'y': player.x -= 5; player.y -= 5; break; // up left\n                case 'u': player.x += 5; player.y -= 5; break; // up right\n                case 'g': player.x -= 5; break; // left\n                case 'h': break; // pass\n                case 'j': player.x += 5; break; // right\n                case 'b': player.x -= 5; player.y += 5; break; // down left\n                case 'n': player.x += 5; player.y += 5; break; // down right\n            }\n        }\n\n        document.addEventListener('keydown', (event) => {\n            const keyMap = {\n                'y': 'y',\n                'u': 'u',\n                'g': 'g',\n                'h': 'h',\n                'j': 'j',\n                'b': 'b',\n                'n': 'n'\n"
    }
  ]
}