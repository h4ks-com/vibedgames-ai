{
  "messages": [
    {
      "role": "user",
      "content": "Please use the following code as a base to update:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Text Selection Test</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/mark.min.js\"></script>\n    <style>\n        body {\n            background-color: #D2C2A0;\n            font-family: Arial, sans-serif;\n            margin: 0;\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            grid-template-rows: auto 1fr auto;\n            gap: 10px;\n            padding: 20px;\n        }\n        .container {\n            grid-column: span 3;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n        }\n        .selecties {\n            display: flex;\n            gap: 5px;\n        }\n        select {\n            width: 30px;\n        }\n        .text-container {\n            display: flex;\n            flex-direction: column;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #f9f9f9;\n            overflow-y: auto;\n            height: 300px;\n        }\n        .text1, .text2 {\n            flex: 1;\n            padding: 10px;\n            margin: 5px;\n            border: 1px solid #ccc;\n            background-color: #fff;\n        }\n        .divider {\n            width: 5px;\n            background-color: #ccc;\n        }\n        .controls {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n        }\n        .color-picker {\n            display: flex;\n            align-items: center;\n            margin: 5px 0;\n        }\n        button {\n            margin-top: 10px;\n            padding: 10px 20px;\n        }\n        .matches {\n            grid-column: span 3;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        input[type=\"text\"] {\n            margin: 5px 0;\n            padding: 5px;\n            width: 100%;\n        }\n    </style>\n    <script type=\"text/javascript\">\n        var instance1 = { value: null };\n        var instance2 = { value: null };\n\n        var from1 = { value: null };\n        var from2 = { value: null };\n        var to1 = { value: null };\n        var to2 = { value: null };\n\n        var lastselection1_start = { value: null };\n        var lastselection1_end = { value: null };\n        var lastselection2_start = { value: null };\n        var lastselection2_end = { value: null };\n\n        const countbr = function (textselection) {\n            const selection = window.getSelection();\n            if (selection != null && selection.rangeCount > 0) {\n                const range = selection.getRangeAt(0);\n                selection.removeAllRanges();\n                const startcount = getBRcount(textselection, range.startContainer, range.startOffset);\n                const endcount = getBRcount(textselection, range.endContainer, range.endOffset);\n                return { start: startcount, end: endcount };\n            } else return null;\n        }\n\n        const getTextSelection = function (textselection) {\n            const selection = window.getSelection();\n            if (selection != null && selection.rangeCount > 0) {\n                const range = selection.getRangeAt(0);\n                return {\n                    start: getTextLength(textselection, range.startContainer, range.startOffset),\n                    end: getTextLength(textselection, range.endContainer, range.endOffset)\n                };\n            } else return null;\n        }\n\n        const getTextLength = function (parent, node, offset) {\n            var textLength = 0;\n            if (node.nodeName == '#text') textLength += offset;\n            else for (var i = 0; i < offset; i++) textLength += getNodeTextLength(node.childNodes[i]);\n            if (node != parent) textLength += getTextLength(parent, node.parentNode, getNodeOffset(node));\n            return textLength;\n        }\n\n        const getBRcount = function (parent, node, offset) {\n            var brcount = 0;\n            if (node.nodeName == 'BR') brcount = 1;\n            else if (node.nodeName == '#text') brcount = 0;\n            else for (var i = 0; i < offset; i++) brcount += getNodeBRcount(node.childNodes[i]);\n            if (node != parent) brcount += getBRcount(parent, node.parentNode, getNodeOffset(node));\n            return brcount;\n        }\n\n        const getNodeBRcount = function (node) {\n            var brcount = 0;\n            if (node.nodeName == 'BR') brcount = 1;\n            else if (node.nodeName == '#text') brcount = 0;\n            else if (node.childNodes != null) for (var i = 0; i < node.childNodes.length; i++) brcount += getNodeBRcount(node.childNodes[i]);\n            return brcount;\n        }\n\n        const getNodeTextLength = function (node) {\n            var textLength = 0;\n            if (node.nodeName == 'BR') textLength = 1;\n            else if (node.nodeName == '#text') textLength = node.nodeValue.length;\n            else if (node.childNodes != null) for (var i = 0; i < node.childNodes.length; i++) textLength += getNodeTextLength(node.childNodes[i]);\n            return textLength;\n        }\n\n        const getNodeOffset = function (node) {\n            return node == null ? -1 : 1 + getNodeOffset(node.previousSibling);\n        }\n\n        const handleSelectionChange = function (element1, element2, from, to, instance, laststart, lastend) {\n            const textSelection = getTextSelection(element1);\n            if (textSelection != null) {\n                const text = element1.textContent;\n                const selection = text.slice(textSelection.start, textSelection.end);\n                const brnumber = countbr(element1);\n                var brstart = brnumber.start;\n                var brend = brnumber.end;\n                startoffset = textSelection.start;\n                endoffset = textSelection.end;\n                var context = element1;\n\n                if (startoffset < endoffset) {\n                    from.value = startoffset;\n                    to.value = endoffset;\n                } else if (startoffset > endoffset) {\n                    from.value = endoffset;\n                    to.value = startoffset;\n                } else {\n                    from.value = \"\";\n                    to.value = \"\";\n                }\n\n                if (instance.value != null) {\n                    instance.value.unmark();\n                }\n\n                if (from.value == \"\" || to.value == \"\") {\n                    element2.textContent = \"\";\n                } else {\n                    element2.placeholder = selection;\n                    lastselection_start.value = parseInt(startoffset - brstart);\n                    lastselection_end.value = parseInt(endoffset - brend);\n                    from.value = lastselection_start.value;\n                    to.value = lastselection_end.value;\n                    lastselection_length = lastselection_end.value - lastselection_start.value;\n                    laststart.value = lastselection_start.value;\n                    lastend.value = lastselection_end.value;\n                    markstart = lastselection_start.value;\n                    marklength = lastselection_length;\n\n                    const randomColor = `rgba(${Math.floor(Math.random() * 128)}, ${Math.floor(Math.random() * 128)}, ${Math.floor(Math.random() * 128)}, 0.5)`;\n                    const randomColor2 = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n\n                    instance.value = new Mark(context);\n                    instance.value.markRanges([{\n                        start: markstart,\n                        length: marklength,\n                    }], {\n                        element: \"mark\",\n                        className: \"\",\n                        each: function (node) {\n                            node.style.color = randomColor;\n                            node.style.backgroundColor = randomColor2;\n                        }\n                    });\n                }\n            }\n        }\n\n        function myFunction() {\n            var fc = document.querySelector('.fcolor');\n            var bc = document.querySelector('.bcolor');\n            var h1Elements = document.getElementsByTagName(\"mark\");\n            for (var i = 0; i < h1Elements.length; i++) {\n                h1Elements[i].style.color = fc.value;\n                h1Elements[i].style.backgroundColor = bc.value;\n            }\n        }\n\n        function select1() {\n            text1 = document.querySelector('.text1');\n            text2 = document.querySelector('.text3');\n            handleSelectionChange(text1, text2, from1, to1, instance1, lastselection1_start, lastselection1_end);\n        }\n\n        function select2() {\n            text1 = document.querySelector('.text2');\n            text2 = document.querySelector('.text4');\n            handleSelectionChange(text1, text2, from2, to2, instance2, lastselection2_start, lastselection2_end);\n        }\n\n        function search1(ele) {\n            if (event.key === 'Enter') {\n                alert(ele.value);\n            }\n        }\n\n        function search2(ele) {\n            if (event.key === 'Enter') {\n                alert(ele.value);\n            }\n        }\n\n        document.addEventListener('DOMContentLoaded', function () {\n            document.getElementById('record-match-button').addEventListener('click', () => {\n                const t3 = document.querySelector('.text3');\n                const t4 = document.querySelector('.text4');\n                const englishSelection = t3.placeholder;\n                const hebrewSelection = t4.placeholder;\n                const englishPosition1 = from1.value.toString();\n                const englishPosition2 = to1.value.toString();\n                const hebrewPosition1 = from2.value.toString();\n                const hebrewPosition2 = to2.value.toString();\n\n                if (englishSelection && hebrewSelection) {\n                    const matchesDiv = document.getElementById('matches');\n                    const matchEntry = document.createElement('div');\n                    matchEntry.textContent = `English: ${englishSelection} ${englishPosition1},${englishPosition2} | Hebrew: ${hebrewSelection} ${hebrewPosition1},${hebrewPosition2}`;\n                    matchesDiv.appendChild(matchEntry);\n                } else {\n                    alert('Please select text on both sides before recording a match.');\n                }\n            });\n        });\n    </script>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"selecties\">\n            <select>\n                <option selected id=\"Hebrew\" value=\"Hebrew\">H</option>\n                <option id=\"Aramaic\" value=\"Aramiac\">A</option>\n                <option id=\"English\" value=\"English\">E</option>\n                <option id=\"Dutch\" value=\"Dutch\">D</option>\n                <option id=\"Chinese\" value=\"Chinese\">C</option>\n            </select>\n            <select>\n                <option selected id=\"Writing\" value=\"Writing\">W</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Genre\" value=\"Genre\">G</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Dating\" value=\"Dating\">D</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Further...\" value=\"Further...\">F</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"ObjectType\" value=\"ObjectType\">O</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Location\" value=\"Location\">L</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <input type=\"text\" id=\"query\" name=\"query\" size=\"10\" />\n        </div>\n    </div>\n    <div class=\"text-container\">\n        <div class=\"text1\" id=\"text1\" onMouseUp=\"select1()\">\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <input type=\"text\" class=\"text3\" id=\"text3\" placeholder=\"English input...\" onkeydown=\"search1(this)\">\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"text2\" id=\"text2\" onMouseUp=\"select2()\">\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <input type=\"text\" class=\"text4\" id=\"text4\" placeholder=\"קלט בעברית...\" onkeydown=\"search2(this)\">\n        </div>\n    </div>\n    <div class=\"controls\">\n        <button id=\"record-match-button\">Record Match</button>\n        <div class=\"color-picker\">\n            <input type=\"color\" id=\"fcolor\" class=\"fcolor\" name=\"fcolor\" value=\"#e66465\" onchange=\"myFunction()\"/>\n            <label for=\"fcolor\">Fcolor</label>\n        </div>\n        <div class=\"color-picker\">\n            <input type=\"color\" id=\"bcolor\" class=\"bcolor\" name=\"bcolor\" value=\"#f6b73c\" onchange=\"myFunction()\"/>\n            <label for=\"bcolor\">Bcolor</label>\n        </div>\n    </div>\n    <div class=\"matches\" id=\"matches\"></div>\n</body>\n</html>\n\n```"
    },
    {
      "role": "user",
      "content": "add a second text panel right next to the Lorem ipsum panel but use Hebrew\nMake sure everything is kept in a single HTML file with embedded CSS and JS in a single code block to be used as a web app."
    },
    {
      "role": "assistant",
      "content": "Here is the updated HTML code with a second text panel added next to the \"Lorem ipsum\" panel, using Hebrew text. The structure and functionality remain intact, and everything is kept in a single HTML file with embedded CSS and JavaScript.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Text Selection Test</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/mark.min.js\"></script>\n    <style>\n        body {\n            background-color: #D2C2A0;\n            font-family: Arial, sans-serif;\n            margin: 0;\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr 1fr;\n            grid-template-rows: auto 1fr auto;\n            gap: 10px;\n            padding: 20px;\n        }\n        .container {\n            grid-column: span 4;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n        }\n        .selecties {\n            display: flex;\n            gap: 5px;\n        }\n        select {\n            width: 30px;\n        }\n        .text-container {\n            display: flex;\n            flex-direction: row;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #f9f9f9;\n            overflow-y: auto;\n            height: 300px;\n        }\n        .text1, .text2, .text3, .text4 {\n            flex: 1;\n            padding: 10px;\n            margin: 5px;\n            border: 1px solid #ccc;\n            background-color: #fff;\n        }\n        .divider {\n            width: 5px;\n            background-color: #ccc;\n        }\n        .controls {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n        }\n        .color-picker {\n            display: flex;\n            align-items: center;\n            margin: 5px 0;\n        }\n        button {\n            margin-top: 10px;\n            padding: 10px 20px;\n        }\n        .matches {\n            grid-column: span 4;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        input[type=\"text\"] {\n            margin: 5px 0;\n            padding: 5px;\n            width: 100%;\n        }\n    </style>\n    <script type=\"text/javascript\">\n        var instance1 = { value: null };\n        var instance2 = { value: null };\n\n        var from1 = { value: null };\n        var from2 = { value: null };\n        var to1 = { value: null };\n        var to2 = { value: null };\n\n        var lastselection1_start = { value: null };\n        var lastselection1_end = { value: null };\n        var lastselection2_start = { value: null };\n        var lastselection2_end = { value: null };\n\n        const countbr = function (textselection) {\n            const selection = window.getSelection();\n            if (selection != null && selection.rangeCount > 0) {\n                const range = selection.getRangeAt(0);\n                selection.removeAllRanges();\n                const startcount = getBRcount(textselection, range.startContainer, range.startOffset);\n                const endcount = getBRcount(textselection, range.endContainer, range.endOffset);\n                return { start: startcount, end: endcount };\n            } else return null;\n        }\n\n        const getTextSelection = function (textselection) {\n            const selection = window.getSelection();\n            if (selection != null && selection.rangeCount > 0) {\n                const range = selection.getRangeAt(0);\n                return {\n                    start: getTextLength(textselection, range.startContainer, range.startOffset),\n                    end: getTextLength(textselection, range.endContainer, range.endOffset)\n                };\n            } else return null;\n        }\n\n        const getTextLength = function (parent, node, offset) {\n            var textLength = 0;\n            if (node.nodeName == '#text') textLength += offset;\n            else for (var i = 0; i < offset; i++) textLength += getNodeTextLength(node.childNodes[i]);\n            if (node != parent) textLength += getTextLength(parent, node.parentNode, getNodeOffset(node));\n            return textLength;\n        }\n\n        const getBRcount = function (parent, node, offset) {\n            var brcount = 0;\n            if (node.nodeName == 'BR') brcount = 1;\n            else if (node.nodeName == '#text') brcount = 0;\n            else for (var i = 0; i < offset; i++) brcount += getNodeBRcount(node.childNodes[i]);\n            if (node != parent) brcount += getBRcount(parent, node.parentNode, getNodeOffset(node));\n            return brcount;\n        }\n\n        const getNodeBRcount = function (node) {\n            var brcount = 0;\n            if (node.nodeName == 'BR') brcount = 1;\n            else if (node.nodeName == '#text') brcount = 0;\n            else if (node.childNodes != null) for (var i = 0; i < node.childNodes.length; i++) brcount += getNodeBRcount(node.childNodes[i]);\n            return brcount;\n        }\n\n        const getNodeTextLength = function (node) {\n            var textLength = 0;\n            if (node.nodeName == 'BR') textLength = 1;\n            else if (node.nodeName == '#text') textLength = node.nodeValue.length;\n            else if (node.childNodes != null) for (var i = 0; i < node.childNodes.length; i++) textLength += getNodeTextLength(node.childNodes[i]);\n            return textLength;\n        }\n\n        const getNodeOffset = function (node) {\n            return node == null ? -1 : 1 + getNodeOffset(node.previousSibling);\n        }\n\n        const handleSelectionChange = function (element1, element2, from, to, instance, laststart, lastend) {\n            const textSelection = getTextSelection(element1);\n            if (textSelection != null) {\n                const text = element1.textContent;\n                const selection = text.slice(textSelection.start, textSelection.end);\n                const brnumber = countbr(element1);\n                var brstart = brnumber.start;\n                var brend = brnumber.end;\n                startoffset = textSelection.start;\n                endoffset = textSelection.end;\n                var context = element1;\n\n                if (startoffset < endoffset) {\n                    from.value = startoffset;\n                    to.value = endoffset;\n                } else if (startoffset > endoffset) {\n                    from.value = endoffset;\n                    to.value = startoffset;\n                } else {\n                    from.value = \"\";\n                    to.value = \"\";\n                }\n\n                if (instance.value != null) {\n                    instance.value.unmark();\n                }\n\n                if (from.value == \"\" || to.value == \"\") {\n                    element2.textContent = \"\";\n                } else {\n                    element2.placeholder = selection;\n                    lastselection_start.value = parseInt(startoffset - brstart);\n                    lastselection_end.value = parseInt(endoffset - brend);\n                    from.value = lastselection_start.value;\n                    to.value = lastselection_end.value;\n                    lastselection_length = lastselection_end.value - lastselection_start.value;\n                    laststart.value = lastselection_start.value;\n                    lastend.value = lastselection_end.value;\n                    markstart = lastselection_start.value;\n                    marklength = lastselection_length;\n\n                    const randomColor = `rgba(${Math.floor(Math.random() * 128)}, ${Math.floor(Math.random() * 128)}, ${Math.floor(Math.random() * 128)}, 0.5)`;\n                    const randomColor2 = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n\n                    instance.value = new Mark(context);\n                    instance.value.markRanges([{\n                        start: markstart,\n                        length: marklength,\n                    }], {\n                        element: \"mark\",\n                        className: \"\",\n                        each: function (node) {\n                            node.style.color = randomColor;\n                            node.style.backgroundColor = randomColor2;\n                        }\n                    });\n                }\n            }\n        }\n\n        function myFunction() {\n            var fc = document.querySelector('.fcolor');\n            var bc = document.querySelector('.bcolor');\n            var h1Elements = document.getElementsByTagName(\"mark\");\n            for (var i = 0; i < h1Elements.length; i++) {\n                h1Elements[i].style.color = fc.value;\n                h1Elements[i].style.backgroundColor = bc.value;\n            }\n        }\n\n        function select1() {\n            text1 = document.querySelector('.text1');\n            text2 = document.querySelector('.text3');\n            handleSelectionChange(text1, text2, from1, to1, instance1, lastselection1_start, lastselection1_end);\n        }\n\n        function select2() {\n            text1 = document.querySelector('.text2');\n            text2 = document.querySelector('.text4');\n            handleSelectionChange(text1, text2, from2, to2, instance2, lastselection2_start, lastselection2_end);\n        }\n\n        function search1(ele) {\n            if (event.key === 'Enter') {\n                alert(ele.value);\n            }\n        }\n\n        function search2(ele) {\n            if (event.key === 'Enter') {\n                alert(ele.value);\n            }\n        }\n\n        document.addEventListener('DOMContentLoaded', function () {\n            document.getElementById('record-match-button').addEventListener('click', () => {\n                const t3 = document.querySelector('.text3');\n                const t4 = document.querySelector('.text4');\n                const englishSelection = t3.placeholder;\n                const hebrewSelection = t4.placeholder;\n                const englishPosition1 = from1.value.toString();\n                const englishPosition2 = to1.value.toString();\n                const hebrewPosition1 = from2.value.toString();\n                const hebrewPosition2 = to2.value.toString();\n\n                if (englishSelection && hebrewSelection) {\n                    const matchesDiv = document.getElementById('matches');\n                    const matchEntry = document.createElement('div');\n                    matchEntry.textContent = `English: ${englishSelection} ${englishPosition1},${englishPosition2} | Hebrew: ${hebrewSelection} ${hebrewPosition1},${hebrewPosition2}`;\n                    matchesDiv.appendChild(matchEntry);\n                } else {\n                    alert('Please select text on both sides before recording a match.');\n                }\n            });\n        });\n    </script>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"selecties\">\n            <select>\n                <option selected id=\"Hebrew\" value=\"Hebrew\">H</option>\n                <option id=\"Aramaic\" value=\"Aramiac\">A</option>\n                <option id=\"English\" value=\"English\">E</option>\n                <option id=\"Dutch\" value=\"Dutch\">D</option>\n                <option id=\"Chinese\" value=\"Chinese\">C</option>\n            </select>\n            <select>\n                <option selected id=\"Writing\" value=\"Writing\">W</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Genre\" value=\"Genre\">G</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Dating\" value=\"Dating\">D</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Further...\" value=\"Further...\">F</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"ObjectType\" value=\"ObjectType\">O</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Location\" value=\"Location\">L</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <input type=\"text\" id=\"query\" name=\"query\" size=\"10\" />\n        </div>\n    </div>\n    <div class=\"text-container\">\n        <div class=\"text1\" id=\"text1\" onMouseUp=\"select1()\">\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <input type=\"text\" class=\"text3\" id=\"text3\" placeholder=\"English input...\" onkeydown=\"search1(this)\">\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"text2\" id=\"text2\" onMouseUp=\"select2()\">\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <input type=\"text\" class=\"text4\" id=\"text4\" placeholder=\"קלט בעברית...\" onkeydown=\"search2(this)\">\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"text1\" id=\"text1_hebrew\" onMouseUp=\"select1()\">\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <input type=\"text\" class=\"text3_hebrew\" id=\"text3_hebrew\" placeholder=\"קלט בעברית...\" onkeydown=\"search1(this)\">\n        </div>\n    </div>\n    <div class=\"controls\">\n        <button id=\"record-match-button\">Record Match</button>\n        <div class=\"color-picker\">\n            <input type=\"color\" id=\"fcolor\" class=\"fcolor\" name=\"fcolor\" value=\"#e66465\" onchange=\"myFunction()\"/>\n            <label for=\"fcolor\">Fcolor</label>\n        </div>\n        <div class=\"color-picker\">\n            <input type=\"color\" id=\"bcolor\" class=\"bcolor\" name=\"bcolor\" value=\"#f6b73c\" onchange=\"myFunction()\"/>\n            <label for=\"bcolor\">Bcolor</label>\n        </div>\n    </div>\n    <div class=\"matches\" id=\"matches\"></div>\n</body>\n</html>\n```\n\nIn this code, I added a new text panel for Hebrew text next to the existing \"Lorem ipsum\" panel. The new panel has the same functionality as the original panels, allowing for text selection and input."
    },
    {
      "role": "user",
      "content": "the second panel should be in its own div, not inside the same one as the first text panel\nMake sure everything is kept in a single HTML file with embedded CSS and JS in a single code block to be used as a web app."
    },
    {
      "role": "assistant",
      "content": "Here is the updated HTML code with the second Hebrew text panel placed in its own separate `<div>`. The structure and functionality remain intact, and everything is kept in a single HTML file with embedded CSS and JavaScript.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Text Selection Test</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/mark.min.js\"></script>\n    <style>\n        body {\n            background-color: #D2C2A0;\n            font-family: Arial, sans-serif;\n            margin: 0;\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr 1fr;\n            grid-template-rows: auto 1fr auto;\n            gap: 10px;\n            padding: 20px;\n        }\n        .container {\n            grid-column: span 4;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n        }\n        .selecties {\n            display: flex;\n            gap: 5px;\n        }\n        select {\n            width: 30px;\n        }\n        .text-container {\n            display: flex;\n            flex-direction: row;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #f9f9f9;\n            overflow-y: auto;\n            height: 300px;\n        }\n        .text1, .text2 {\n            flex: 1;\n            padding: 10px;\n            margin: 5px;\n            border: 1px solid #ccc;\n            background-color: #fff;\n        }\n        .divider {\n            width: 5px;\n            background-color: #ccc;\n        }\n        .controls {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n        }\n        .color-picker {\n            display: flex;\n            align-items: center;\n            margin: 5px 0;\n        }\n        button {\n            margin-top: 10px;\n            padding: 10px 20px;\n        }\n        .matches {\n            grid-column: span 4;\n            border: 1px solid #ccc;\n            padding: 10px;\n            background-color: #fff;\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        input[type=\"text\"] {\n            margin: 5px 0;\n            padding: 5px;\n            width: 100%;\n        }\n    </style>\n    <script type=\"text/javascript\">\n        var instance1 = { value: null };\n        var instance2 = { value: null };\n\n        var from1 = { value: null };\n        var from2 = { value: null };\n        var to1 = { value: null };\n        var to2 = { value: null };\n\n        var lastselection1_start = { value: null };\n        var lastselection1_end = { value: null };\n        var lastselection2_start = { value: null };\n        var lastselection2_end = { value: null };\n\n        const countbr = function (textselection) {\n            const selection = window.getSelection();\n            if (selection != null && selection.rangeCount > 0) {\n                const range = selection.getRangeAt(0);\n                selection.removeAllRanges();\n                const startcount = getBRcount(textselection, range.startContainer, range.startOffset);\n                const endcount = getBRcount(textselection, range.endContainer, range.endOffset);\n                return { start: startcount, end: endcount };\n            } else return null;\n        }\n\n        const getTextSelection = function (textselection) {\n            const selection = window.getSelection();\n            if (selection != null && selection.rangeCount > 0) {\n                const range = selection.getRangeAt(0);\n                return {\n                    start: getTextLength(textselection, range.startContainer, range.startOffset),\n                    end: getTextLength(textselection, range.endContainer, range.endOffset)\n                };\n            } else return null;\n        }\n\n        const getTextLength = function (parent, node, offset) {\n            var textLength = 0;\n            if (node.nodeName == '#text') textLength += offset;\n            else for (var i = 0; i < offset; i++) textLength += getNodeTextLength(node.childNodes[i]);\n            if (node != parent) textLength += getTextLength(parent, node.parentNode, getNodeOffset(node));\n            return textLength;\n        }\n\n        const getBRcount = function (parent, node, offset) {\n            var brcount = 0;\n            if (node.nodeName == 'BR') brcount = 1;\n            else if (node.nodeName == '#text') brcount = 0;\n            else for (var i = 0; i < offset; i++) brcount += getNodeBRcount(node.childNodes[i]);\n            if (node != parent) brcount += getBRcount(parent, node.parentNode, getNodeOffset(node));\n            return brcount;\n        }\n\n        const getNodeBRcount = function (node) {\n            var brcount = 0;\n            if (node.nodeName == 'BR') brcount = 1;\n            else if (node.nodeName == '#text') brcount = 0;\n            else if (node.childNodes != null) for (var i = 0; i < node.childNodes.length; i++) brcount += getNodeBRcount(node.childNodes[i]);\n            return brcount;\n        }\n\n        const getNodeTextLength = function (node) {\n            var textLength = 0;\n            if (node.nodeName == 'BR') textLength = 1;\n            else if (node.nodeName == '#text') textLength = node.nodeValue.length;\n            else if (node.childNodes != null) for (var i = 0; i < node.childNodes.length; i++) textLength += getNodeTextLength(node.childNodes[i]);\n            return textLength;\n        }\n\n        const getNodeOffset = function (node) {\n            return node == null ? -1 : 1 + getNodeOffset(node.previousSibling);\n        }\n\n        const handleSelectionChange = function (element1, element2, from, to, instance, laststart, lastend) {\n            const textSelection = getTextSelection(element1);\n            if (textSelection != null) {\n                const text = element1.textContent;\n                const selection = text.slice(textSelection.start, textSelection.end);\n                const brnumber = countbr(element1);\n                var brstart = brnumber.start;\n                var brend = brnumber.end;\n                startoffset = textSelection.start;\n                endoffset = textSelection.end;\n                var context = element1;\n\n                if (startoffset < endoffset) {\n                    from.value = startoffset;\n                    to.value = endoffset;\n                } else if (startoffset > endoffset) {\n                    from.value = endoffset;\n                    to.value = startoffset;\n                } else {\n                    from.value = \"\";\n                    to.value = \"\";\n                }\n\n                if (instance.value != null) {\n                    instance.value.unmark();\n                }\n\n                if (from.value == \"\" || to.value == \"\") {\n                    element2.textContent = \"\";\n                } else {\n                    element2.placeholder = selection;\n                    lastselection_start.value = parseInt(startoffset - brstart);\n                    lastselection_end.value = parseInt(endoffset - brend);\n                    from.value = lastselection_start.value;\n                    to.value = lastselection_end.value;\n                    lastselection_length = lastselection_end.value - lastselection_start.value;\n                    laststart.value = lastselection_start.value;\n                    lastend.value = lastselection_end.value;\n                    markstart = lastselection_start.value;\n                    marklength = lastselection_length;\n\n                    const randomColor = `rgba(${Math.floor(Math.random() * 128)}, ${Math.floor(Math.random() * 128)}, ${Math.floor(Math.random() * 128)}, 0.5)`;\n                    const randomColor2 = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n\n                    instance.value = new Mark(context);\n                    instance.value.markRanges([{\n                        start: markstart,\n                        length: marklength,\n                    }], {\n                        element: \"mark\",\n                        className: \"\",\n                        each: function (node) {\n                            node.style.color = randomColor;\n                            node.style.backgroundColor = randomColor2;\n                        }\n                    });\n                }\n            }\n        }\n\n        function myFunction() {\n            var fc = document.querySelector('.fcolor');\n            var bc = document.querySelector('.bcolor');\n            var h1Elements = document.getElementsByTagName(\"mark\");\n            for (var i = 0; i < h1Elements.length; i++) {\n                h1Elements[i].style.color = fc.value;\n                h1Elements[i].style.backgroundColor = bc.value;\n            }\n        }\n\n        function select1() {\n            text1 = document.querySelector('.text1');\n            text2 = document.querySelector('.text3');\n            handleSelectionChange(text1, text2, from1, to1, instance1, lastselection1_start, lastselection1_end);\n        }\n\n        function select2() {\n            text1 = document.querySelector('.text2');\n            text2 = document.querySelector('.text4');\n            handleSelectionChange(text1, text2, from2, to2, instance2, lastselection2_start, lastselection2_end);\n        }\n\n        function search1(ele) {\n            if (event.key === 'Enter') {\n                alert(ele.value);\n            }\n        }\n\n        function search2(ele) {\n            if (event.key === 'Enter') {\n                alert(ele.value);\n            }\n        }\n\n        document.addEventListener('DOMContentLoaded', function () {\n            document.getElementById('record-match-button').addEventListener('click', () => {\n                const t3 = document.querySelector('.text3');\n                const t4 = document.querySelector('.text4');\n                const englishSelection = t3.placeholder;\n                const hebrewSelection = t4.placeholder;\n                const englishPosition1 = from1.value.toString();\n                const englishPosition2 = to1.value.toString();\n                const hebrewPosition1 = from2.value.toString();\n                const hebrewPosition2 = to2.value.toString();\n\n                if (englishSelection && hebrewSelection) {\n                    const matchesDiv = document.getElementById('matches');\n                    const matchEntry = document.createElement('div');\n                    matchEntry.textContent = `English: ${englishSelection} ${englishPosition1},${englishPosition2} | Hebrew: ${hebrewSelection} ${hebrewPosition1},${hebrewPosition2}`;\n                    matchesDiv.appendChild(matchEntry);\n                } else {\n                    alert('Please select text on both sides before recording a match.');\n                }\n            });\n        });\n    </script>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"selecties\">\n            <select>\n                <option selected id=\"Hebrew\" value=\"Hebrew\">H</option>\n                <option id=\"Aramaic\" value=\"Aramiac\">A</option>\n                <option id=\"English\" value=\"English\">E</option>\n                <option id=\"Dutch\" value=\"Dutch\">D</option>\n                <option id=\"Chinese\" value=\"Chinese\">C</option>\n            </select>\n            <select>\n                <option selected id=\"Writing\" value=\"Writing\">W</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Genre\" value=\"Genre\">G</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Dating\" value=\"Dating\">D</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Further...\" value=\"Further...\">F</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"ObjectType\" value=\"ObjectType\">O</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <select>\n                <option selected id=\"Location\" value=\"Location\">L</option>\n                <option id=\"az\" value=\"az\">A</option>\n            </select>\n            <input type=\"text\" id=\"query\" name=\"query\" size=\"10\" />\n        </div>\n    </div>\n    <div class=\"text-container\">\n        <div class=\"text1\" id=\"text1\" onMouseUp=\"select1()\">\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <p style=\"direction: ltr;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            <input type=\"text\" class=\"text3\" id=\"text3\" placeholder=\"English input...\" onkeydown=\"search1(this)\">\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"text2\" id=\"text2\" onMouseUp=\"select2()\">\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <input type=\"text\" class=\"text4\" id=\"text4\" placeholder=\"קלט בעברית...\" onkeydown=\"search2(this)\">\n        </div>\n    </div>\n    <div class=\"text-container\">\n        <div class=\"text1\" id=\"text1_hebrew\" onMouseUp=\"select1()\">\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <p style=\"direction: rtl;\">לורם איפסום דולור סיט אמט, קונסקטטור אדיפיסינג אלית. סד דו אאוסמוד טמפור אינצידידונט אוט לאבור ואט דולור מגנה אליקווה.</p>\n            <input type=\"text\" class=\"text3_hebrew\" id=\"text3_hebrew\" placeholder=\"קלט בעברית...\" onkeydown=\"search1(this)\">\n        </div>\n    </div>\n    <div class=\"controls\">\n        <button id=\"record-match-button\">Record Match</button>\n        <div class=\"color-picker\">\n            <input type=\"color\" id=\"fcolor\" class=\"fcolor\" name=\"fcolor\" value=\"#e66465\" onchange=\"myFunction()\"/>\n            <label for=\"fcolor\">Fcolor</label>\n        </div>\n        <div class=\"color-picker\">\n            <input type=\"color\" id=\"bcolor\" class=\"bcolor\" name=\"bcolor\" value=\"#f6b73c\" onchange=\"myFunction()\"/>\n            <label for=\"bcolor\">Bcolor</label>\n        </div>\n    </div>\n    <div class=\"matches\" id=\"matches\"></div>\n</body>\n</html>\n```\n\nIn this code, the second Hebrew text panel is now in its own `<div class=\"text-container\">`, separate from the first text panel. This maintains a clear structure and allows for independent functionality for each panel."
    }
  ]
}