{
  "messages": [
    {
      "role": "user",
      "content": "using HTML5 canvas and JS, build a system like SHRDLU that takes in commands from the user about a blocks world and displays the blocks world on the canvas.\nMake sure everything is in a single HTML file with embedded CSS and JS in a single code block to be used as a web app."
    },
    {
      "role": "assistant",
      "content": "Below is an HTML file containing embedded CSS and JavaScript that implements a simple version of a blocks world system similar to SHRDLU. This code creates a canvas where users can input commands to manipulate blocks. The basic commands implemented are \"stack\", \"unstack\", and \"move\".\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Blocks World Simulator</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            text-align: center;\n        }\n        #canvas {\n            border: 1px solid #000;\n            margin: 20px auto;\n            display: block;\n        }\n        #input {\n            margin-top: 10px;\n            padding: 10px;\n            width: 400px;\n        }\n        #submit {\n            padding: 10px;\n        }\n    </style>\n</head>\n<body>\n\n<h1>Blocks World Simulator</h1>\n<canvas id=\"canvas\" width=\"500\" height=\"400\"></canvas>\n<input type=\"text\" id=\"input\" placeholder=\"Enter a command (e.g., 'stack A on B')\" />\n<button id=\"submit\">Submit</button>\n<p id=\"output\"></p>\n\n<script>\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    const output = document.getElementById('output');\n    \n    const blocks = {\n        A: { x: 50, y: 300, height: 20 },\n        B: { x: 150, y: 300, height: 20 },\n        C: { x: 250, y: 300, height: 20 },\n    };\n\n    function drawBlock(name, x, y) {\n        ctx.fillStyle = 'skyblue';\n        ctx.fillRect(x, y - blocks[name].height, 50, blocks[name].height);\n        ctx.strokeStyle = 'black';\n        ctx.strokeRect(x, y - blocks[name].height, 50, blocks[name].height);\n    }\n\n    function clearCanvas() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n\n    function drawBlocks() {\n        clearCanvas();\n        for (let block in blocks) {\n            drawBlock(block, blocks[block].x, blocks[block].y);\n        }\n    }\n\n    function handleCommand(command) {\n        const parts = command.split(' ');\n        if (parts[0] === 'stack' && parts.length === 4) {\n            const block1 = parts[1];\n            const block2 = parts[3];\n\n            if (blocks[block1] && blocks[block2]) {\n                blocks[block1].y = blocks[block2].y - blocks[block1].height;\n                output.innerText = `Staked ${block1} on ${block2}`;\n            } else {\n                output.innerText = 'Invalid blocks';\n            }\n        } else if (parts[0] === 'unstack' && parts.length === 3) {\n            const block1 = parts[1];\n            const block2 = parts[2];\n\n            if (blocks[block1]) {\n                blocks[block1].y = 300; // Put it back to ground level for simplicity\n                output.innerText = `Unstacked ${block1} from ${block2}`;\n            } else {\n                output.innerText = 'Invalid block';\n            }\n        } else if (parts[0] === 'move' && parts.length === 4) {\n            const block1 = parts[1];\n            const block2 = parts[3];\n\n            if (blocks[block1] && blocks[block2]) {\n                blocks[block1].x = blocks[block2].x;\n                output.innerText = `Moved ${block1} to ${block2}`;\n            } else {\n                output.innerText = 'Invalid blocks';\n            }\n        } else {\n            output.innerText = 'Unknown command';\n        }\n        drawBlocks();\n    }\n\n    document.getElementById('submit').onclick = function() {\n        const command = document.getElementById('input').value.trim();\n        handleCommand(command);\n        document.getElementById('input').value = '';\n    };\n\n    // Initial drawing\n    drawBlocks();\n</script>\n\n</body>\n</html>\n```\n\n### Instructions to Use\n1. Copy the entire code and paste it into a new HTML file (e.g., `blocks_world.html`).\n2. Open this file in a web browser.\n3. Use the input box to type commands like:\n   - `stack A on B`\n   - `unstack A from B`\n   - `move A to B`\n4. Press the \"Submit\" button to execute the command.\n5. The canvas will display the blocks according to your commands.\n\n### Features\n- You can stack block A on B, unstack it, and move blocks around.\n- The drawing on the canvas is updated after each command to reflect the current state of the blocks.\n- Basic validation for the commands is included, with error messages displayed for invalid commands. \n\nFeel free to expand the functionality as needed!"
    }
  ]
}