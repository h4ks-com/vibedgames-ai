{
  "messages": [
    {
      "role": "user",
      "content": "user draws on a blank HTML canvas with standard paint controls and clicks \"send\" -- then the app creates a correctly style CSS/JS HTML page based on the drawing\nMake sure everything is in a single HTML file with embedded CSS and JS in a single code block to be used as a web app."
    },
    {
      "role": "assistant",
      "content": "Sure! Below is a simple HTML web application that allows users to draw on a blank canvas using standard paint controls. When the \"Send\" button is clicked, it generates an HTML page that reproduces the drawing on a new canvas along with the necessary styles and scripts.\n\nCopy and paste the code below into an HTML file (for instance, `draw-app.html`), and then open it in your web browser.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Canvas Drawing App</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n            margin: 20px;\n        }\n        canvas {\n            border: 1px solid #000;\n            cursor: crosshair;\n        }\n    </style>\n</head>\n<body>\n\n<h1>Canvas Drawing App</h1>\n<canvas id=\"drawCanvas\" width=\"500\" height=\"400\"></canvas><br>\n<button id=\"clearBtn\">Clear</button>\n<button id=\"sendBtn\">Send</button>\n\n<textarea id=\"output\" style=\"width: 100%; height: 300px; display: none;\"></textarea>\n\n<script>\n    const canvas = document.getElementById('drawCanvas');\n    const ctx = canvas.getContext('2d');\n    let drawing = false;\n\n    function startPosition(e) {\n        drawing = true;\n        draw(e);\n    }\n\n    function endPosition() {\n        drawing = false;\n        ctx.beginPath();\n    }\n\n    function draw(e) {\n        if (!drawing) return;\n\n        ctx.lineWidth = 5;\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'black';\n\n        ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n    }\n\n    canvas.addEventListener('mousedown', startPosition);\n    canvas.addEventListener('mouseup', endPosition);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseleave', endPosition);\n\n    document.getElementById('clearBtn').addEventListener('click', () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n    });\n\n    document.getElementById('sendBtn').addEventListener('click', () => {\n        const dataURL = canvas.toDataURL();\n\n        const htmlContent = `\n            <!DOCTYPE html>\n            <html lang=\"en\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <title>My Drawing</title>\n                <style>\n                    body {\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        height: 100vh;\n                        background-color: #f0f0f0;\n                    }\n                    canvas {\n                        border: 1px solid #000;\n                    }\n                </style>\n            </head>\n            <body>\n                <h1>My Drawing</h1>\n                <canvas id=\"drawCanvas\" width=\"500\" height=\"400\"></canvas>\n                <script>\n                    const canvas = document.getElementById('drawCanvas');\n                    const ctx = canvas.getContext('2d');\n                    const img = new Image();\n                    img.src = '${dataURL}';\n                    img.onload = () => {\n                        ctx.drawImage(img, 0, 0);\n                    };\n                </script>\n            </body>\n            </html>\n        `;\n\n        const output = document.getElementById('output');\n        output.style.display = 'block';\n        output.value = htmlContent;\n        output.select();\n        document.execCommand('copy');\n        alert('HTML generated and copied to clipboard! Open a new HTML file to see your drawing.');\n    });\n</script>\n\n</body>\n</html>\n```\n\n### How to Use:\n1. **Drawing**: Click and drag on the canvas to draw.\n2. **Clear**: Click the \"Clear\" button to reset the canvas.\n3. **Send**: Click the \"Send\" button to generate the HTML code for your drawing, which will be copied to your clipboard.\n\nWhen you open the generated HTML in a new file, it will display your drawing! You can save it as an HTML file to view it independently."
    }
  ]
}