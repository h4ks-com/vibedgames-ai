{
  "messages": [
    {
      "role": "user",
      "content": "user control random emoji directions with 'y' (up left), 'u' (up right), 'g' (left), 'h' (pass), 'j' (right), 'b' (down left), 'n' (down right); emoji initial position in upper left of screen; background image is https://picsum.photos/200/300; random moving emoji monsters and collectible items scattered across the page; score display\nMake sure everything is in a single HTML file with embedded CSS and JS in a single code block to be used as a web app."
    },
    {
      "role": "assistant",
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Emoji Game</title>\n    <style>\n        body {\n            margin: 0;\n            overflow: hidden;\n            background-image: url('https://picsum.photos/200/300');\n            background-size: cover;\n            position: relative;\n            height: 100vh;\n        }\n\n        #player {\n            position: absolute;\n            width: 50px;\n            height: 50px;\n            font-size: 50px;\n            top: 0;\n            left: 0;\n        }\n\n        .monster, .item {\n            position: absolute;\n            width: 50px;\n            height: 50px;\n            font-size: 50px;\n        }\n\n        #score {\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            color: white;\n            font-size: 24px;\n        }\n    </style>\n</head>\n\n<body>\n\n    <div id=\"player\">👾</div>\n    <div id=\"score\">Score: 0</div>\n\n    <script>\n        const player = document.getElementById('player');\n        const scoreDisplay = document.getElementById('score');\n        let score = 0;\n\n        const monsters = ['👹', '👺', '👻', '💀'];\n        const items = ['🍎', '🍌', '🍇', '🍉'];\n\n        function randomPosition() {\n            return {\n                top: Math.random() * (window.innerHeight - 50),\n                left: Math.random() * (window.innerWidth - 50)\n            };\n        }\n\n        function createMonster() {\n            const monster = document.createElement('div');\n            monster.className = 'monster';\n            monster.innerText = monsters[Math.floor(Math.random() * monsters.length)];\n            const pos = randomPosition();\n            monster.style.top = pos.top + 'px';\n            monster.style.left = pos.left + 'px';\n            document.body.appendChild(monster);\n            moveMonster(monster);\n        }\n\n        function createItem() {\n            const item = document.createElement('div');\n            item.className = 'item';\n            item.innerText = items[Math.floor(Math.random() * items.length)];\n            const pos = randomPosition();\n            item.style.top = pos.top + 'px';\n            item.style.left = pos.left + 'px';\n            document.body.appendChild(item);\n        }\n\n        function moveMonster(monster) {\n            const interval = setInterval(() => {\n                const pos = randomPosition();\n                monster.style.top = pos.top + 'px';\n                monster.style.left = pos.left + 'px';\n            }, 1000);\n        }\n\n        function updateScore() {\n            scoreDisplay.innerText = 'Score: ' + score;\n        }\n\n        document.addEventListener('keydown', (event) => {\n            const step = 10;\n            const rect = player.getBoundingClientRect();\n\n            switch (event.key) {\n                case 'y':\n                    player.style.top = Math.max(0, rect.top - step) + 'px';\n                    player.style.left = Math.max(0, rect.left - step) + 'px';\n                    break;\n                case 'u':\n                    player.style.top = Math.max(0, rect.top - step) + 'px';\n                    player.style.left = Math.min(window.innerWidth - 50, rect.left + step) + 'px';\n                    break;\n                case 'g':\n                    player.style.top = rect.top + 'px';\n                    player.style.left = Math.max(0, rect.left - step) + 'px';\n                    break;\n                case 'h':\n                    // Pass\n                    break;\n                case 'j':\n                    player.style.top = rect.top + 'px';\n                    player.style.left = Math.min(window.innerWidth - 50, rect.left + step) + 'px';\n                    break;\n                case 'b':\n                    player.style.top = Math.min(window.innerHeight - 50, rect.top + step) + 'px';\n                    player.style.left = Math.max(0, rect.left - step) + 'px';\n                    break;\n                case 'n':\n                    player.style.top = Math.min(window.innerHeight - 50, rect.top + step) + 'px';\n                    player.style.left = Math.min(window.innerWidth - 50, rect.left + step) + 'px';\n                    break;\n            }\n\n            // Check for collisions with items\n            document.querySelectorAll('.item').forEach(item => {\n                const itemRect = item.getBoundingClientRect();\n                if (rect.left < itemRect.left + itemRect.width &&\n                    rect.left + rect.width > itemRect.left &&\n                    rect.top < itemRect.top + itemRect.height &&\n                    rect.top + rect.height > itemRect"
    }
  ]
}