{
  "messages": [
    {
      "role": "user",
      "content": "connect to irc via wss://irc.h4ks.com:8097 and use random nick. Then execute LIST command and parse it's output and display as fancy table. The format example is 322 #{channelname} :{description}\nMake sure everything is in a single HTML file with embedded CSS and JS in a single code block to be used as a web app."
    },
    {
      "role": "assistant",
      "content": "Creating a web app that connects to an IRC server via WebSocket, executes the LIST command, and displays the output in a fancy table requires a combination of HTML, CSS, and JavaScript. Below is a complete example of how you can achieve this. Please note that this code is for educational purposes and may require adjustments based on the actual WebSocket implementation of the IRC server.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>IRC Channel List</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f4f4f4;\n            margin: 0;\n            padding: 20px;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 20px;\n        }\n        th, td {\n            padding: 10px;\n            border: 1px solid #ddd;\n            text-align: left;\n        }\n        th {\n            background-color: #4CAF50;\n            color: white;\n        }\n        tr:nth-child(even) {\n            background-color: #f2f2f2;\n        }\n        tr:hover {\n            background-color: #ddd;\n        }\n    </style>\n</head>\n<body>\n\n<h1>IRC Channel List</h1>\n<table id=\"channelTable\">\n    <thead>\n        <tr>\n            <th>Channel Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <!-- Channel data will be inserted here -->\n    </tbody>\n</table>\n\n<script>\n    const ws = new WebSocket('wss://irc.h4ks.com:8097');\n\n    ws.onopen = function() {\n        const randomNick = 'User' + Math.floor(Math.random() * 10000);\n        ws.send(`NICK ${randomNick}`);\n        ws.send(`USER ${randomNick} 0 * :${randomNick}`);\n    };\n\n    ws.onmessage = function(event) {\n        const message = event.data;\n        console.log(message);\n\n        // Parse the LIST command response\n        if (message.startsWith('322')) {\n            const parts = message.split(' ');\n            const channelName = parts[3];\n            const description = parts.slice(4).join(' ').trim();\n            addChannelToTable(channelName, description);\n        }\n\n        // Send LIST command after a short delay to ensure we are connected\n        if (message.startsWith('001')) { // 001 is the welcome message\n            setTimeout(() => {\n                ws.send('LIST');\n            }, 1000);\n        }\n    };\n\n    function addChannelToTable(channelName, description) {\n        const tableBody = document.getElementById('channelTable').getElementsByTagName('tbody')[0];\n        const newRow = tableBody.insertRow();\n        const channelCell = newRow.insertCell(0);\n        const descriptionCell = newRow.insertCell(1);\n        channelCell.textContent = channelName;\n        descriptionCell.textContent = description;\n    }\n\n    ws.onclose = function() {\n        console.log('Disconnected from IRC server');\n    };\n\n    ws.onerror = function(error) {\n        console.error('WebSocket Error: ', error);\n    };\n</script>\n\n</body>\n</html>\n```\n\n### Explanation:\n1. **HTML Structure**: The HTML contains a table to display the channel names and descriptions.\n2. **CSS Styles**: Basic styles are applied to make the table look nice and readable.\n3. **JavaScript Logic**:\n   - A WebSocket connection is established to the IRC server.\n   - A random nickname is generated and sent to the server.\n   - The LIST command is sent after receiving a welcome message (code 001).\n   - The response is parsed, and channel names and descriptions are added to the table.\n\n### Note:\n- Ensure that the WebSocket URL (`wss://irc.h4ks.com:8097`) is correct and that the server supports WebSocket connections.\n- This code may need to be run in a secure context (HTTPS) due to WebSocket security policies.\n- The actual parsing of the IRC messages may vary based on the server's response format. Adjust the parsing logic as necessary."
    }
  ]
}